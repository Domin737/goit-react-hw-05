{"version":3,"file":"static/js/375.7c59199e.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n`;\n\nexport const MovieContent = styled.div`\n  display: flex;\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  border-radius: 10px;\n  margin-right: 20px;\n`;\n\nexport const BackButton = styled(Link)`\n  display: inline-block;\n  margin-bottom: 20px;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  text-decoration: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const MovieScore = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const MovieOverview = styled.div`\n  margin-bottom: 10px;\n\n  h3 {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const MovieGenres = styled.div`\n  margin-bottom: 10px;\n\n  h3 {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  margin-right: 10px;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  text-decoration: none;\n  border-radius: 5px;\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/api';\nimport {\n  MovieDetailsContainer,\n  MovieImage,\n  BackButton,\n  MovieContent,\n  MovieDescription,\n  LinkButton,\n  MovieTitle,\n  MovieInfo,\n  MovieScore,\n  MovieOverview,\n  MovieGenres,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <MovieDetailsContainer>\n      <BackButton to=\"/movies\">Go back</BackButton>\n      <MovieContent>\n        <MovieImage\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <MovieDescription>\n          <MovieTitle>{movie.title}</MovieTitle>\n          <MovieInfo>\n            <MovieScore>User Score: {movie.vote_average * 10}%</MovieScore>\n            <MovieOverview>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </MovieOverview>\n            <MovieGenres>\n              <h3>Genres</h3>\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </MovieGenres>\n          </MovieInfo>\n          <div>\n            <LinkButton to=\"cast\">Cast</LinkButton>\n            <LinkButton to=\"reviews\">Reviews</LinkButton>\n          </div>\n        </MovieDescription>\n      </MovieContent>\n      <Outlet />\n    </MovieDetailsContainer>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }),\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '1efe92e76ecf8940ef24fa2a53d5512a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n"],"names":["MovieDetailsContainer","styled","_templateObject","_taggedTemplateLiteral","MovieContent","_templateObject2","MovieImage","_templateObject3","BackButton","Link","_templateObject4","MovieDescription","_templateObject5","MovieTitle","_templateObject6","MovieInfo","_templateObject7","MovieScore","_templateObject8","MovieOverview","_templateObject9","MovieGenres","_templateObject10","LinkButton","_templateObject11","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","fetchMovieDetails","then","_jsxs","children","_jsx","to","src","concat","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","Outlet","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","fetchTrendingMovies","_ref","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","sent","abrupt","json","stop","searchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}