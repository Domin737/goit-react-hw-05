{"version":3,"file":"static/js/313.54affd96.chunk.js","mappings":"6NAEaA,E,OAAkBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0D,SC+BzC,EA7Be,WACb,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAOxB,OACEG,EAAAA,EAAAA,MAACd,EAAe,CAAAe,SAAA,EACdC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJD,EAAAA,EAAAA,MAAA,QAAMG,SARW,SAAAC,GACnBA,EAAMC,kBACNC,EAAAA,EAAAA,IAAaZ,GAAOa,MAAK,SAAAC,GAAI,OAAIT,EAAUS,EAAKC,QAAQ,GAC1D,EAKiCR,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAIlB,EAASkB,EAAEC,OAAOH,MAAM,KAEzCT,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAAQT,SAAC,eAExBC,EAAAA,EAAAA,KAAA,MAAAD,SACGH,EAAOiB,KAAI,SAAAC,GAAK,OACfd,EAAAA,EAAAA,KAAA,MAAAD,SAAoBe,EAAMC,OAAjBD,EAAME,GAAsB,QAK/C,C,8GC/BMC,EAAU,mCACVC,EAAW,+BAEJC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACVC,MAAM,GAADC,OACvBX,EAAQ,gCAAAW,OAA+BZ,IAC1C,KAAD,EAFa,OAARO,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAGPP,EAASQ,QAAM,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KACvB,kBAL+B,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAOnB/B,EAAY,eAAAgC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAM7C,GAAK,IAAAgC,EAAA,OAAAF,IAAAA,MAAA,SAAAgB,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACdC,MAAM,GAADC,OACvBX,EAAQ,0BAAAW,OAAyBZ,EAAO,WAAAY,OAAUrC,IACrD,KAAD,EAFa,OAARgC,EAAQc,EAAAR,KAAAQ,EAAAP,OAAA,SAGPP,EAASQ,QAAM,wBAAAM,EAAAL,OAAA,GAAAI,EAAA,KACvB,gBALwBE,GAAA,OAAAH,EAAAF,MAAA,KAAAC,UAAA,I","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  padding: 20px;\n  background-color: #f0f0f0;\n`;\n","import React, { useState } from 'react';\nimport { searchMovies } from '../../services/api';\nimport { MoviesContainer } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSearch = event => {\n    event.preventDefault();\n    searchMovies(query).then(data => setMovies(data.results));\n  };\n\n  return (\n    <MoviesContainer>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>{movie.title}</li>\n        ))}\n      </ul>\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n","const API_KEY = '1efe92e76ecf8940ef24fa2a53d5512a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n"],"names":["MoviesContainer","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","movies","setMovies","_jsxs","children","_jsx","onSubmit","event","preventDefault","searchMovies","then","data","results","type","value","onChange","e","target","map","movie","title","id","API_KEY","BASE_URL","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","concat","sent","abrupt","json","stop","apply","arguments","_ref2","_callee2","_context2","_x"],"sourceRoot":""}