{"version":3,"file":"static/js/387.097b3498.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n`;\n\nexport const CastItem = styled.div`\n  border-bottom: 1px solid #ddd;\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n\n  h3 {\n    margin: 0;\n    font-size: 1.2rem;\n    color: #333;\n  }\n\n  p {\n    margin: 5px 0 0;\n    color: #666;\n  }\n\n  img {\n    width: 50px;\n    height: 75px;\n    object-fit: cover;\n    margin-right: 15px;\n    border-radius: 5px;\n  }\n`;\n\nexport const NoCastMessage = styled.p`\n  font-size: 1.1rem;\n  color: #666;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/api';\nimport { CastContainer, CastItem, NoCastMessage } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => setCast(data));\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      <h2>Cast</h2>\n      {cast.length > 0 ? (\n        cast.map(actor => (\n          <CastItem key={actor.cast_id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : 'https://via.placeholder.com/50x75'\n              }\n              alt={actor.name}\n            />\n            <div>\n              <h3>{actor.name}</h3>\n              <p>as {actor.character}</p>\n            </div>\n          </CastItem>\n        ))\n      ) : (\n        <NoCastMessage>\n          No cast information available for this movie.\n        </NoCastMessage>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '1efe92e76ecf8940ef24fa2a53d5512a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","NoCastMessage","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCredits","then","data","_jsxs","children","_jsx","length","map","actor","src","profile_path","concat","alt","name","character","cast_id","API_KEY","BASE_URL","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","sent","json","abrupt","results","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","self","this","args","err","undefined"],"sourceRoot":""}